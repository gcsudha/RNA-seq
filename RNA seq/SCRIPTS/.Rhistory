library(data.table)
library(stargazer)
library(plyr)
library(dplyr)
library(lmtest)
library(plm)
library(GGally)
library(AER)
d <- fread('/Users/davidlinnardwheeler/Desktop/w241-ps5-spring2020-section5/data/ps5_no1.csv') # laptop
d <- fread('/Users/davidwheeler/Desktop/ps5_no1.csv') # laptop
# Robust Standard Errors
Robust_SE = function(LinearModel){
# Covariance matrix for RSE
LinearModel$vcovHC = vcovHC(LinearModel)
# Coefficients estimates, SE, test-statistics, and p-values
LinearModel$coeffs = coeftest(LinearModel,
vcov. = LinearModel$vcovHC)
# Return coefficients estimates, SE, test-statistics, and p-values
return(LinearModel$coeffs)
}
# Clustered Standard Errors
Clustered_SE = function(LinearModel, k){
# Covariance matrix for RSE
LinearModel$vcovCL = vcovCL(LinearModel,
cluster = k)
# Coefficients estimates, SE, test-statistics, and p-values
LinearModel$coeffs = coeftest(LinearModel,
vcov. = LinearModel$vcovCL)
# Return coefficients estimates, SE, test-statistics, and p-values
return(LinearModel$coeffs)
}
# Summary
summary(d)
# Structure
str(d)
# Table
head(d)
# Table for products
table(d$product_b,
d$treatment_ad_exposures_week1)
# Histogram of income by draft rank
ggplot(d,
aes(treatment_ad_exposures_week1,
fill = as.factor(total_ad_exposures_week1))) +
geom_histogram(bins = 10, position = 'dodge',alpha = 1/2) +
theme_bw()
# Histogram of treatment ads grouped by total ads
ggplot(d,
aes(treatment_ad_exposures_week1,
fill = as.factor(total_ad_exposures_week1))) +
geom_histogram(bins = 10, position = 'dodge',alpha = 1/2) +
theme_bw()
# Crosstab
table(d$total_ad_exposures_week1,# Odd and even
d$treatment_ad_exposures_week1) # Even seconds
# Proposed model
lm_1b = lm(week1 ~ treatment_ad_exposures_week1,
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1b)
# Placebo test
lm_pt = lm(week0 ~ treatment_ad_exposures_week1,
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_pt)
ggplot(data = d,
aes(x = fitted(lm_pt),
y = resid(lm_pt))) +
geom_jitter(size=4, pch=20, alpha=1/9, position=position_jitter(w = 0.3, h = 0.3))+
theme_bw()
# Proposed model
lm_1c = lm(week0 ~ factor(treatment_ad_exposures_week1) + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1c)
ggplot(data = d,
aes(x = fitted(lm_1c),
y = resid(lm_1c))) +
geom_jitter(size=4, pch=20, alpha=1/9, position=position_jitter(w = 0.3, h = 0.3))+
theme_bw()
# Proposed model
lm_1d = lm(week0 ~ factor(treatment_ad_exposures_week1) + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1d)
# Build linear model
lm_1e = lm(week1 ~ factor(treatment_ad_exposures_week1) + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1e)
# Build linear model
lm_1e = lm(week1 ~ treatment_ad_exposures_week1 + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1e)
# Build linear model
lm_1e = lm(week1 ~ factor(treatment_ad_exposures_week1) + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1e)
# Total revenues for weeks 1-10
d$week1_10 = rowSums(d[,5:14])
# Build linear model
lm_1g = lm(week1_10 ~ factor(treatment_ad_exposures_week1) + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1g)
# Total revenues for weeks 1-10
d$week2_10 = rowSums(d[,6:14])
# Build linear model
lm_1h = lm(week2_10 ~ factor(treatment_ad_exposures_week1) + factor(total_ad_exposures_week1),
data=d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_1h)
d <- fread("/Users/davidlinnardwheeler/Desktop/w241-ps5-spring2020-section5/data/ps5_no2.csv") # laptop
d <- fread("/Users/davidwheeler/Desktop/w241-ps5-spring2020-section5/data/ps5_no2.csv") # desktop
d <- fread("/Users/davidwheeler/Desktop/w241-ps5-spring2020-section5/data/ps5_no2.csv") # desktop
d <- fread("/Users/davidwheeler/Desktop/ps5_no2.csv") # desktop
# EDA
summary(d)
# NAs in data?
colSums(is.na(d))
# Scatterplot matrix
ggpairs(d,
aes(color = years_education, alpha = 0.0000001),
columns = c("income", "draft_number", "years_education"),
lower  = list(continuous = wrap("points",
position=position_jitter(height=.3, width=.3),
size = 1)),
upper  = list(continuous = "blank"),
diag  = list(continuous = "blankDiag"))
# years of eduction vs draft number
ggplot(data = d,
aes(x = draft_number,
y = years_education)) +
geom_jitter(size = 5, pch = 20, alpha = 1/7, position = position_jitter(w = 0.4, h = 0.1))+
theme_bw()
# Build linear model
lm_2a = lm(income ~ years_education,
data = d)
# Coefficients estimates, SE, test-statistics, and p-values
Robust_SE(lm_2a)
# Create dummy for rank of draft number: if drat number is less than or equal to 80
d[, high_ranked_DN := ifelse(draft_number <= 80,
# 1 = High-ranked
1,
# else, 0 = low-ranked
0)]
# Number of ranks
table(d$high_ranked_DN)
# Build linear model
lm_2c = lm(years_education ~ high_ranked_DN,
data = d)
# Coefficients estimates, SE, test-statistics, and p-values
Clustered_SE(lm_2c, d$draft_number)
```{r}
# Build linear model
lm_2d = lm(income ~ high_ranked_DN,
data = d)
# Coefficients estimates, SE, test-statistics, and p-values
Clustered_SE(lm_2d, d$draft_number)
# Effect of eduction on income
IV_est = Clustered_SE(lm_2d, d$draft_number)[2,1] /#  Estimate from d
Clustered_SE(lm_2c, d$draft_number)[2,1] # Estimate from c
IV_est
# Table of draft number rank
table(d$high_ranked_DN)
# Mean number of normalized low-rank draft numbers/day
table(d$high_ranked_DN)[[1]]/(365-80)
# Mean number of normalized high-rank draft numbers/day
table(d$high_ranked_DN)[[02]]/(80)
hist(d$draft_number,
breaks = 20,
col = "grey")
# Histogram of income by draft rank
ggplot(d, aes(income, fill = as.factor(high_ranked_DN))) +
geom_histogram(bins = 10, position = 'dodge',alpha = 1/2) +
theme_bw()
# Boxplots of income vs draft rank
ggplot(data = d,aes(x = as.factor(high_ranked_DN),
y = income, group = as.factor(high_ranked_DN), color = as.factor(high_ranked_DN))) +
geom_boxplot(outlier.size = 1,
alpha = 1/7, lwd = 1.5, notch = F)+
geom_jitter(aes(fill=high_ranked_DN), size = 3, pch = 20, alpha = 1/7, position = position_jitter(w = 0.4, h = 0.1))+
theme_bw() + theme(panel.grid.major=element_line(colour = "white"))+
scale_colour_manual(values=c("gray25", "darkolivegreen4"))+
labs(x = "draft number", y = "income")+
theme(axis.title.x = element_text(size = 18,face = "bold"))+
theme(axis.title.y = element_text(size = 18,face = "bold"))+
scale_x_discrete(labels=c("low-rank", "high-rank"))+
theme(axis.title.x=element_text(size = 12))+
theme(axis.title.y=element_text(size = 12))+
theme(axis.text.x=element_text(angle = 1,size = 15, face = "bold"))+
theme(axis.text.y=element_text(size = 15,face = "bold"))+
theme(legend.position = "none")
# Group data by draft number
d_agg = d[, list(mu_high_rank = mean(high_ranked_DN),
N = .N),
keyby = draft_number]
head(d_agg)
# Scatterplot matrix
ggpairs(d_agg,
aes(color = mu_high_rank, alpha = 0.00001),
columns = c("N", "draft_number", "mu_high_rank"),
lower  = list(continuous = wrap("points",
position=position_jitter(height=.3, width=.3),
size = 2)),
upper  = list(continuous = "blank"),
diag  = list(continuous = "blankDiag")) +
theme_bw()
# N/draft nummber vs draft rank
ggplot(data = d_agg,
aes(x = draft_number,
y = N)) +
geom_jitter(size = 5, pch = 20, alpha = 1/2, position = position_jitter(w = 0.2, h = 0.1))+
theme_bw()
# Grouped by birthday/rank
boxplot(d_agg$N ~ d_agg$mu_high_rank,
xlab="draft number rank",
names=c("low-draft rank", "high-draft rank"),
ylab="Number of birthdays per day")
stripchart(d_agg$N ~ d_agg$mu_high_rank,
vertical = TRUE,
method = "jitter",
add = TRUE,
pch = 19)
# Means
d_agg[, .("Number of draft-numbers/day" = mean(N)),
by=mu_high_rank]
# Build linear model
lm_2g = lm(N ~ mu_high_rank,
data = d_agg)
# Coefficients estimates, SE, test-statistics, and p-values
Clustered_SE(lm_2g, d_agg$draft_number)
